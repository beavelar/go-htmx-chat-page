services:
  content:
    build:
      context: ./services/content
      dockerfile: Dockerfile
    environment:
      - CONTENT_SERVICE_HOST=content
      - CONTENT_SERVICE_PORT=80
      - DB_SERVICE_HOST=database
      - DB_SERVICE_PORT=80
    networks:
      - content
  database:
    build:
      context: ./services/database
      dockerfile: Dockerfile
    depends_on:
      postgres-db:
        condition: service_started
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DB_GRPC_HOST=database
      - DB_GRPC_PORT=80
    networks:
      - content
      - database
  database-seed:
    build:
      context: ./services/database-seed
      dockerfile: Dockerfile
    depends_on:
      postgres-db:
        condition: service_started
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - INIT_DATABASE=${INIT_DATABASE}
      - PGPASSWORD=${DATABASE_PASSWORD}
    networks:
      - database
  postgres-db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - database
  nginx:
    build: .
    networks:
      - content
    ports: 
      - "55590:80"
networks:
  content:
    driver: bridge
  database:
    driver: bridge
